setwd("C:/Users/kspin/Documents/R Outputs/Projects/SDS_6/DaviesHarte-master")
require("pacman")
p_load("boot","stat","ggplot")
search()
p_load(boot,stat,ggplot)
setwd("C:/Users/kspin/Documents/R Outputs/Projects/SDS_6")
setwd("C:/Users/kspin/Documents/R Outputs/Projects/SDS_6/DaviesHarte-master")
pacman::p_load(ggplot,boot,stat)
pacman::p_load(ggplot,boot)
setwd("C:/Users/kspin/Documents/R Outputs/Projects/SDS_6")
pacman::p_load(ggplot,boot)
setwd("C:/Users/kspin/Documents/R Outputs")
pacman::p_load(ggplot,boot)
search()
require(boot)
require("boot")
########## R SETUP ###########
setwd("C:/Users/kspin/Documents/R Outputs/Projects/SDS_6/MA1_Estimation")
require("pacman")
pacman::p_load(boot,latex2exp,tseries,ggplot2)
#automatic install of packages if they are not installed already
list.of.packages <- c(
"foreach",
"doParallel",
"ranger",
"palmerpenguins",
"tidyverse",
"kableExtra"
)
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages) > 0){
install.packages(new.packages, dep=TRUE)
}
#loading packages
for(package.i in list.of.packages){
suppressPackageStartupMessages(
library(
package.i,
character.only = TRUE
)
)
}
parallel::detectCores()
n.cores <- parallel::detectCores() - 1
#create the cluster
my.cluster <- parallel::makeCluster(
n.cores,
type = "PSOCK"
)
#check cluster definition (optional)
print(my.cluster)
#register it to be used by %dopar%
doParallel::registerDoParallel(cl = my.cluster)
#check if it is registered (optional)
foreach::getDoParRegistered()
foreach::getDoParWorkers()
#TO CLOSE CLUSTER, parallel::stopCluster(cl = my.cluster)
parallel::stopCluster(cl = my.cluster)
dat <- arima.sim(n = n, list(ma = c(1), sd = sqrt(1)))
?arima.sim
?arima
dat <- arima.sim(n = n, list(order = c(0,0,1)), ma = c(0.8), sd = sqrt(1)))
dat <- arima.sim(n = n, list(order = c(0,0,1), ma = c(0.8)), sd = sqrt(1)))
dat <- arima.sim(n = n, list(order = c(0,0,1), ma = c(0.8)), sd = sqrt(1))
dat <- arima.sim(n = 200, list(order = c(0,0,1), ma = c(0.8)), sd = sqrt(1))
plot(dat)
?ggplot
ggplot(dat, aes( y = dat))
dat
ggplot(dat)
tsplot(dat)
ts(dat)
dat
?tseries
??tseries
